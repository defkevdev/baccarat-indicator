import './App.css';
import React, { useState, useEffect } from 'react';

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô Big Road (‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á 6 ‡πÅ‡∏ñ‡∏ß)
function getBigRoad(results, maxRows = 6, maxCols) {
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á
  let col = 0, row = 0, last = null, tempCol = 0;
  for (let i = 0; i < results.length; i++) {
    const curr = results[i];
    if (curr !== last) {
      if (i !== 0) tempCol++;
      row = 0;
    } else {
      if (row < maxRows - 1) {
        row++;
      } else {
        tempCol++;
        row = 0;
      }
    }
    last = curr;
  }
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° buffer ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÑ‡∏ß‡πâ 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  maxCols = Math.max(20, tempCol + 2);

  // ‡∏ß‡∏≤‡∏î grid ‡∏à‡∏£‡∏¥‡∏á
  const grid = Array.from({ length: maxRows }, () => Array(maxCols).fill(null));
  col = 0;
  row = 0;
  last = null;
  for (let i = 0; i < results.length && col < maxCols; i++) {
    const curr = results[i];
    if (curr !== last) {
      if (i !== 0) col++;
      row = 0;
    } else {
      if (row < maxRows - 1 && !grid[row + 1][col]) {
        row++;
      } else {
        col++;
        row = 0;
      }
    }
    if (col >= maxCols) break;
    grid[row][col] = { value: curr, index: i };
    last = curr;
  }
  return grid;
}

function App() {
  const [results, setResults] = useState([]);
  const [prediction, setPrediction] = useState('');
  const [budget, setBudget] = useState(1000); // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const [betAmount, setBetAmount] = useState(100); // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πâ
  const [balance, setBalance] = useState(1000); // ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
  const [history, setHistory] = useState([]); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å/‡∏ú‡∏¥‡∏î
  const [showResult, setShowResult] = useState(null); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup win/lose

  // ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  const [stats, setStats] = useState({}); // { '2024-06-05': { correct: 0, wrong: 0, profit: 0, bet: 0 } }
  const [showStats, setShowStats] = useState(false);

  const [isBetting, setIsBetting] = useState(false);

  // Helper: ‡∏Ñ‡∏∑‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö yyyy-mm-dd
  const getToday = () => {
    const d = new Date();
    return d.toISOString().slice(0, 10);
  };

  // Helper: ‡∏Ñ‡∏∑‡∏ô array 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  const getLast7Days = () => {
    const arr = [];
    for (let i = 6; i >= 0; i--) {
      const d = new Date();
      d.setDate(d.getDate() - i);
      arr.push(d.toISOString().slice(0, 10));
    }
    return arr;
  };

  // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏à‡∏≤‡∏Å localStorage
  useEffect(() => {
    const saved = localStorage.getItem('baccarat_stats');
    if (saved) setStats(JSON.parse(saved));
  }, []);

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏•‡∏á localStorage ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà stats ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    localStorage.setItem('baccarat_stats', JSON.stringify(stats));
  }, [stats]);

  // Pie Chart component (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ)
  function SimplePieChart({ data, size = 120 }) {
    const total = Object.values(data).reduce((a, b) => a + b, 0);
    let startAngle = 0;
    const colors = { P: '#2196f3', B: '#e53935', T: '#43a047' };
    const keys = Object.keys(data);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ slice
    const slices = keys.map((k, i) => {
      const value = data[k];
      const angle = (value / total) * 360;
      const large = angle > 180 ? 1 : 0;
      const r = size / 2;
      const x1 = r + r * Math.cos((Math.PI / 180) * (startAngle - 90));
      const y1 = r + r * Math.sin((Math.PI / 180) * (startAngle - 90));
      const x2 = r + r * Math.cos((Math.PI / 180) * (startAngle + angle - 90));
      const y2 = r + r * Math.sin((Math.PI / 180) * (startAngle + angle - 90));
      const path = `
        M ${r},${r}
        L ${x1},${y1}
        A ${r},${r} 0 ${large} 1 ${x2},${y2}
        Z
      `;
      startAngle += angle;
      return (
        <path key={k} d={path} fill={colors[k] || '#888'} stroke="#222" strokeWidth="1" />
      );
    });

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
    const percents = keys.map(k => (
      <div key={k} style={{ color: colors[k], fontWeight: 600, marginRight: 12 }}>
        {k === 'P' && 'üîµ Player'}{k === 'B' && 'üî¥ Banker'}{k === 'T' && 'üü¢ Tie'}: {total ? ((data[k] / total) * 100).toFixed(1) : 0}%
      </div>
    ));

    return (
      <div style={{ display: 'flex', alignItems: 'center', margin: '16px 0 0 0' }}>
        <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`}>
          {slices}
        </svg>
        <div style={{ marginLeft: 18, fontSize: 16 }}>{percents}</div>
      </div>
    );
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà + ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï stats
  const addResult = (value) => {
    if (results.length >= 90) {
      alert('‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏î‡∏ú‡∏•‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 90 ‡∏ï‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
      return;
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° logic: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏î "‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ" ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡πÄ‡∏â‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô/‡∏ñ‡∏π‡∏Å‡∏ú‡∏¥‡∏î
    if (results.length >= 15 && prediction && isBetting) {
      let predValue = null;
      if (prediction.includes('B (Banker)')) predValue = 'B';
      else if (prediction.includes('P (Player)')) predValue = 'P';
      else if (prediction.includes('‡∏™‡∏∏‡πà‡∏°')) predValue = null;

      if (predValue) {
        let isCorrect = predValue === value;
        if (value === 'T') {
          setHistory(h => [
            ...h,
            { guess: predValue, actual: value, correct: null, bet: isBetting }
          ]);
        } else {
          setHistory(h => [
            ...h,
            { guess: predValue, actual: value, correct: isCorrect, bet: isBetting }
          ]);
          setBalance(bal => isCorrect ? bal + betAmount : bal - betAmount);
          setShowResult(isCorrect ? 'win' : 'lose');
          setTimeout(() => setShowResult(null), 1200);

          // --- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï stats ‡∏û‡∏£‡πâ‡∏≠‡∏° detail ---
          const today = getToday();
          setStats(prev => {
            const old = prev[today] || { correct: 0, wrong: 0, profit: 0, bet: 0, detail: [] };
            return {
              ...prev,
              [today]: {
                correct: old.correct + (isCorrect ? 1 : 0),
                wrong: old.wrong + (!isCorrect ? 1 : 0),
                profit: old.profit + (isCorrect ? betAmount : -betAmount),
                bet: old.bet + betAmount,
                detail: [...(old.detail || []), value]
              }
            };
          });
        }
      }
    }
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° detail ‡πÅ‡∏°‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ prediction (‡πÄ‡∏û‡∏∑‡πà‡∏≠ Pie Chart)
    const today = getToday();
    setStats(prev => {
      const old = prev[today] || { correct: 0, wrong: 0, profit: 0, bet: 0, detail: [] };
      return {
        ...prev,
        [today]: {
          ...old,
          detail: [...(old.detail || []), value]
        }
      };
    });
    setResults([...results, value]);
    setPrediction(null);
    setIsBetting(false); // reset ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏î‡∏ú‡∏•
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
  useEffect(() => {
    if (results.length < 15) {
      setPrediction('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 15 ‡∏£‡∏≠‡∏ö');
      return;
    }
    const countP = results.filter(r => r === 'P').length;
    const countB = results.filter(r => r === 'B').length;
    if (countP > countB) setPrediction('‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤: B (Banker)');
    else if (countB > countP) setPrediction('‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤: P (Player)');
    else {
      setPrediction('‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤ :');
      setRandomPrediction(Math.random() < 0.5 ? 'P' : 'B');
    }
  }, [results]); // <-- ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÅ‡∏Ñ‡πà results

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏™‡∏µ
  const renderCircle = (value, idx, isTie = false) => {
    let color = '';
    if (value === 'B') color = 'red';
    else if (value === 'P') color = 'blue';
    else if (value === 'T') color = 'green';
    return (
      <div
        key={idx}
        style={{
          width: 36,
          height: 36,
          borderRadius: '50%',
          background: color,
          margin: 2,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          color: '#fff',
          fontWeight: 'bold',
          fontSize: 20,
          border: isTie ? '2px solid #fff' : undefined,
          position: 'relative'
        }}
        title={value}
      >
        {value}
      </div>
    );
  };

  // Big Road grid
  const bigRoad = getBigRoad(results);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Big Road
  const renderBigRoadCell = (cell, rowIdx, colIdx) => {
    if (!cell) return <div key={colIdx} style={{ width: 28, height: 28, margin: 1 }} />;
    return (
      <div
        key={colIdx}
        style={{ position: 'relative', cursor: 'pointer' }}
        onContextMenu={e => {
          e.preventDefault();
          removeResultAt(rowIdx, colIdx);
        }}
        title="‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏ú‡∏•‡∏ï‡∏≤‡∏ô‡∏µ‡πâ"
      >
        {renderCircle(cell.value, `${rowIdx}-${colIdx}`)}
      </div>
    );
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö prediction
  const renderPredictionCircle = (prediction) => {
    if (!prediction) return null;
    if (prediction.includes('B (Banker)')) return renderCircle('B', 'prediction');
    if (prediction.includes('P (Player)')) return renderCircle('P', 'prediction');
    if (prediction.includes('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•')) return <p style={{ color: 'orange' }}>{prediction}</p>;
    if (prediction.trim() === '‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤ :') {
      return renderCircle(randomPrediction, 'prediction');
    }
    return null;
  };

  // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å/‡∏ú‡∏¥‡∏î
  const correctCount = history.filter(h => h.correct).length;
  const wrongCount = history.filter(h => h.correct === false).length;

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
  const resetBudget = () => {
    setBudget(1000);
    setBetAmount(100);
    setBalance(1000);
    setResults([]);
    setPrediction(null);
    setHistory([]);
  };

  const [showAbout, setShowAbout] = useState(false);
  const [showGuide, setShowGuide] = useState(false);
  const [showSupport, setShowSupport] = useState(false);

  // --- UI ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ 7 ‡∏ß‡∏±‡∏ô ---
  const renderStatsPopup = () => {
    const days = getLast7Days();

    // ‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 7 ‡∏ß‡∏±‡∏ô
    let totalP = 0, totalB = 0, totalT = 0;
    days.forEach(day => {
      const s = stats[day] || {};
      if (s.detail) {
        s.detail.forEach(v => {
          if (v === 'P') totalP++;
          else if (v === 'B') totalB++;
          else if (v === 'T') totalT++;
        });
      }
    });

    // Pie chart data
    const pieData = { P: totalP, B: totalB, T: totalT };

    // Accuracy
    let totalGuess = 0, totalCorrect = 0;
    days.forEach(day => {
      const s = stats[day] || {};
      totalGuess += (s.correct || 0) + (s.wrong || 0);
      totalCorrect += (s.correct || 0);
    });
    const accuracy = totalGuess ? ((totalCorrect / totalGuess) * 100).toFixed(1) : 0;

    // --- ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
    const handleResetStats = () => {
      if (window.confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        setStats({});
        localStorage.removeItem('baccarat_stats');
      }
    };

    return (
      <div
        style={{
          position: 'fixed',
          top: 0, left: 0, width: '100vw', height: '100vh',
          background: '#000a',
          zIndex: 99999,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          animation: 'fadeInBg 0.3s'
        }}
        onClick={() => setShowStats(false)}
      >
        <div
          style={{
            background: '#222',
            color: '#fff',
            padding: '32px 28px',
            borderRadius: 16,
            maxWidth: 520,
            fontSize: 16,
            boxShadow: '0 8px 32px #000a',
            position: 'relative',
            animation: 'popupZoomIn 0.3s'
          }}
          onClick={e => e.stopPropagation()}
        >
          <button
            style={{
              position: 'absolute',
              top: 12,
              right: 16,
              background: 'transparent',
              color: '#fff',
              border: 'none',
              fontSize: 24,
              cursor: 'pointer'
            }}
            onClick={() => setShowStats(false)}
            aria-label="close"
          >√ó</button>
          <div style={{ fontWeight: 600, fontSize: 18, marginBottom: 12 }}>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</div>
          <SimplePieChart data={pieData} />
          <div style={{ margin: '12px 0 18px 0', fontSize: 16 }}>
            <b>Accuracy:</b> <span style={{ color: 'lime', fontWeight: 600 }}>{accuracy}%</span>
          </div>
          <table style={{ width: '100%', color: '#fff', borderCollapse: 'collapse', fontSize: 15 }}>
            <thead>
              <tr style={{ borderBottom: '1px solid #444' }}>
                <th style={{ textAlign: 'left', padding: 4 }}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                <th style={{ padding: 4 }}>‡∏ñ‡∏π‡∏Å</th>
                <th style={{ padding: 4 }}>‡∏ú‡∏¥‡∏î</th>
                <th style={{ padding: 4 }}>‡∏ó‡∏∏‡∏ô</th>
                <th style={{ padding: 4 }}>‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô</th>
              </tr>
            </thead>
            <tbody>
              {days.map(day => {
                const s = stats[day] || { correct: 0, wrong: 0, profit: 0, bet: 0 };
                return (
                  <tr key={day} style={{ borderBottom: '1px solid #333' }}>
                    <td style={{ padding: 4 }}>{day}</td>
                    <td style={{ color: 'lime', textAlign: 'center' }}>{s.correct}</td>
                    <td style={{ color: 'tomato', textAlign: 'center' }}>{s.wrong}</td>
                    <td style={{ color: '#ffb700', textAlign: 'center' }}>
                      {s.bet.toLocaleString()}
                    </td>
                    <td style={{ color: s.profit >= 0 ? 'lime' : 'tomato', textAlign: 'center' }}>
                      {s.profit > 0 ? '+' : ''}{s.profit.toLocaleString()}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
          <div style={{ marginTop: 16, color: '#aaa', fontSize: 14 }}>
            *‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ù‡∏∂‡∏Å‡∏ß‡∏¥‡∏ô‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á*
          </div>
          <button
            style={{
              marginTop: 18,
              background: '#ff4136',
              color: '#fff',
              border: 'none',
              borderRadius: 8,
              padding: '8px 22px',
              fontSize: 16,
              fontWeight: 600,
              cursor: 'pointer',
              float: 'right'
            }}
            onClick={handleResetStats}
          >
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>
        </div>
      </div>
    );
  };

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô removeResultAt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏ú‡∏•‡∏à‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  const removeResultAt = (rowIdx, colIdx) => {
    const cell = bigRoad[rowIdx][colIdx];
    if (!cell) return;
    if (window.confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ú‡∏•‡∏ï‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
      const idx = cell.index;
      // ‡∏•‡∏ö‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á idx
      const newResults = results.slice(0, idx).concat(results.slice(idx + 1));
      setResults(newResults);
      setPrediction(null);

      // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï history ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì balance ‡πÉ‡∏´‡∏°‡πà
      let newHistory = [];
      let newBalance = budget;
      if (newResults.length >= 15) {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á prediction ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
        for (let i = 15; i < newResults.length; i++) {
          // ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÉ‡∏ä‡πâ logic ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏¢ (‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏ñ‡πâ‡∏≤‡∏°‡∏µ logic ‡∏ó‡∏≤‡∏¢‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô)
          const countP = newResults.slice(0, i).filter(r => r === 'P').length;
          const countB = newResults.slice(0, i).filter(r => r === 'B').length;
          let predValue = null;
          if (countP > countB) predValue = 'B';
          else if (countB > countP) predValue = 'P';
          else predValue = null;

          const value = newResults[i];
          if (predValue && value !== 'T') {
            const isCorrect = predValue === value;
            newHistory.push({ guess: predValue, actual: value, correct: isCorrect });
            newBalance += isCorrect ? betAmount : -betAmount;
          } else if (value === 'T') {
            newHistory.push({ guess: predValue, actual: value, correct: null });
          }
        }
      }
      setHistory(newHistory);
      setBalance(newBalance);
    }
  };

  const [randomPrediction, setRandomPrediction] = useState('P');

  return (
    <div className="App">
      <header className="App-header">
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô */}
        <button
          style={{
            position: 'absolute',
            top: 24,
            left: 24,
            background: '#444',
            color: '#fff',
            border: 'none',
            borderRadius: 8,
            padding: '8px 20px',
            fontSize: 16,
            cursor: 'pointer',
            zIndex: 100
          }}
          onClick={() => setShowGuide(true)}
        >
          ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        </button>
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ 7 ‡∏ß‡∏±‡∏ô */}
        <button
          style={{
            position: 'absolute',
            top: 24,
            left: 180,
            background: '#444',
            color: '#fff',
            border: 'none',
            borderRadius: 8,
            padding: '8px 20px',
            fontSize: 16,
            cursor: 'pointer',
            zIndex: 100
          }}
          onClick={() => setShowStats(true)}
        >
          ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ 7 ‡∏ß‡∏±‡∏ô
        </button>
        {/* Popup ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô */}
        {showGuide && (
          <div
            style={{
              position: 'fixed',
              top: 0, left: 0, width: '100vw', height: '100vh',
              background: '#000a',
              zIndex: 99999,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              animation: 'fadeInBg 0.3s'
            }}
            onClick={() => setShowGuide(false)}
          >
            <div
              style={{
                background: '#222',
                color: '#fff',
                padding: '32px 28px',
                borderRadius: 16,
                maxWidth: 540,
                maxHeight: '90vh', // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
                overflowY: 'auto', // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
                fontSize: 17,
                boxShadow: '0 8px 32px #000a',
                position: 'relative',
                animation: 'popupZoomIn 0.3s'
              }}
              onClick={e => e.stopPropagation()}
            >
              <button
                style={{
                  position: 'absolute',
                  top: 12,
                  right: 16,
                  background: 'transparent',
                  color: '#fff',
                  border: 'none',
                  fontSize: 24,
                  cursor: 'pointer'
                }}
                onClick={() => setShowGuide(false)}
                aria-label="close"
              >√ó</button>
              <div style={{ whiteSpace: 'normal', lineHeight: 1.7 }}>
                <b>üß≠ ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Baccarat Indicator</b><br />
                <span style={{ color: '#aaa' }}>‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ freecash.net</span>
                <div style={{ margin: '10px 0' }}>
                  <i>‚Äú‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò ‚Äî ‡πÅ‡∏ï‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‚Äù</i>
                </div>
                <hr style={{ border: 0, borderTop: '1px solid #444', margin: '12px 0' }} />

                {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô */}
                <div style={{ 
                  background: '#333', 
                  color: '#ffeb3b', 
                  padding: '10px 16px', 
                  borderRadius: 8, 
                  marginBottom: 18, 
                  fontWeight: 600, 
                  fontSize: 16 
                }}>
                  ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ï‡∏≤‡πÄ‡∏ß‡πâ‡∏ô‡∏ï‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥<br />
                  <span style={{ color: '#fff', fontWeight: 400, fontSize: 15 }}>
                    ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ï‡∏≤
                  </span>
                </div>

                <div style={{ marginBottom: 16 }}>
                  <b>üî∞ 1. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</b>
                  <ul style={{ margin: '8px 0 8px 22px', padding: 0 }}>
                    <li><b>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°:</b> ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡πÉ‡∏ô session ‡∏ô‡∏µ‡πâ (‡πÄ‡∏ä‡πà‡∏ô 1000)</li>
                    <li><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô/‡πÑ‡∏°‡πâ:</b> ‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ï‡πà‡∏≠ 1 ‡∏ï‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô 100)</li>
                  </ul>
                  <span style={{ color: '#aaa' }}>
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ß‡∏¥‡∏ô‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏ú‡∏•‡∏≠‡∏´‡∏•‡∏∏‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
                  </span>
                </div>

                <div style={{ marginBottom: 16 }}>
                  <b>üß† 2. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡πÄ‡∏Å‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠ (Manual Input)</b>
                  <ul style={{ margin: '8px 0 8px 22px', padding: 0 }}>
                    <li><span style={{ color: 'blue' }}>üîµ P</span> = Player ‡∏ä‡∏ô‡∏∞</li>
                    <li><span style={{ color: 'red' }}>üî¥ B</span> = Banker ‡∏ä‡∏ô‡∏∞</li>
                    <li><span style={{ color: 'green' }}>üü¢ T</span> = ‡πÄ‡∏™‡∏°‡∏≠ (Tie)</li>
                    <li style={{ color: '#ffeb3b', marginTop: 6 }}>
                      <b>‡∏´‡∏≤‡∏Å‡∏à‡∏î‡∏ú‡∏•‡∏ú‡∏¥‡∏î:</b> ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏ú‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏ú‡∏•‡∏ï‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏î‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    </li>
                  </ul>
                  <span style={{ color: '#aaa' }}>
                    ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏´‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà‡πÅ‡∏ö‡∏ö visual ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏µ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏≠‡∏á
                  </span>
                </div>

                <div style={{ marginBottom: 16 }}>
                  <b>üîÆ 3. ‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</b>
                  <div style={{ margin: '8px 0 8px 22px' }}>
                    ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡πÑ‡∏õ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°<br />
                    <b>‚û°Ô∏è "‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ"</b><br />
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå momentum ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà ‚Äú‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‚Äù ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡∏ç‡πà‡∏™‡∏µ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÄ‡∏ä‡πà‡∏ô B ‡∏´‡∏£‡∏∑‡∏≠ P
                  </div>
                  <div style={{ color: '#ffb700', margin: '8px 0 0 22px', fontSize: 15 }}>
                    <b>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</b> ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ï‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏à‡∏î‡∏ú‡∏•‡∏Ñ‡∏£‡∏ö 15 ‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
                  </div>
                  <span style={{ color: '#aaa' }}>
                    ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏∑‡∏≠ ‚Äú‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
                  </span>
                </div>

                <div style={{ marginBottom: 16 }}>
                  <b>üìä 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</b>
                  <ul style={{ margin: '8px 0 8px 22px', padding: 0 }}>
                    <li>‚úÖ ‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á</li>
                    <li>‚ùå ‡∏ó‡∏≤‡∏¢‡∏ú‡∏¥‡∏î: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á</li>
                  </ul>
                  <span style={{ color: '#aaa' }}>
                    ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á ‚Äú‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‚Äù ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏£‡∏¥‡∏á
                  </span>
                </div>

                <div>
                  <b>üßò‚Äç‚ôÇÔ∏è 5. ‡∏ß‡∏¥‡∏ô‡∏±‡∏¢‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏∏‡∏ç‡πÅ‡∏à</b>
                  <ul style={{ margin: '8px 0 8px 22px', padding: 0 }}>
                    <li>‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ß‡πà‡∏≤ Indicator ‡∏Ñ‡∏∑‡∏≠ ‚Äú‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‚Äù ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</li>
                    <li>‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ</li>
                    <li>‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏° <b>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡πà‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•</b></li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}
        <div style={{ marginBottom: 0 }}>
          <h2 style={{ marginBottom: 4 }}>baccarat indicator</h2>
          <div style={{ fontSize: 14, color: '#aaa', marginBottom: 16, textAlign: 'center' }}>by freecash.org</div>
        </div>
        {/* ‡∏õ‡∏∏‡πà‡∏° About Us */}
        <button
          style={{
            position: 'absolute',
            top: 24,
            right: 24,
            background: '#444',
            color: '#fff',
            border: 'none',
            borderRadius: 8,
            padding: '8px 20px',
            fontSize: 16,
            cursor: 'pointer',
            zIndex: 100
          }}
          onClick={() => setShowAbout(true)}
        >
          About Us
        </button>
        {/* Popup About Us */}
        {showAbout && (
          <div
            style={{
              position: 'fixed',
              top: 0, left: 0, width: '100vw', height: '100vh',
              background: '#000a',
              zIndex: 99999,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              animation: 'fadeInBg 0.3s'
            }}
            onClick={() => setShowAbout(false)}
          >
            <div
              style={{
                background: '#222',
                color: '#fff',
                padding: '32px 28px',
                borderRadius: 16,
                maxWidth: 480,
                maxHeight: '90vh', // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
                overflowY: 'auto', // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
                fontSize: 17,
                boxShadow: '0 8px 32px #000a',
                position: 'relative',
                animation: 'popupZoomIn 0.3s'
              }}
              onClick={e => e.stopPropagation()}
            >
              <button
                style={{
                  position: 'absolute',
                  top: 12,
                  right: 16,
                  background: 'transparent',
                  color: '#fff',
                  border: 'none',
                  fontSize: 24,
                  cursor: 'pointer'
                }}
                onClick={() => setShowAbout(false)}
                aria-label="close"
              >√ó</button>
              <div style={{ whiteSpace: 'normal', lineHeight: 1.7 }}>
                <b>freecash.net presents: Baccarat Indicator</b>
                <br />
                <span style={{ fontWeight: 600, color: '#aaa' }}>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏£‡∏á‡∏û‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏¢‡∏∏‡∏Ñ‡πÉ‡∏´‡∏°‡πà</span>
                <hr style={{ border: 0, borderTop: '1px solid #444', margin: '12px 0' }} />
                <div style={{ marginBottom: 10 }}>
                  ‡πÉ‡∏ô‡∏™‡∏ô‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏±‡∏ô‡∏ú‡∏ß‡∏ô ‡∏°‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏î‡∏ß‡∏á... ‡πÅ‡∏ï‡πà‡∏Ñ‡∏∑‡∏≠ <b>‚Äú‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚Äù</b> ‡πÅ‡∏•‡∏∞ <b>‚Äú‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‚Äù</b>
                </div>
                <div style={{ marginBottom: 10 }}>
                  <span role="img" aria-label="target">üéØ</span> <b>‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ</b><br />
                  Baccarat Indicator by freecash.org ‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö (Pattern Recognition) ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏•‡∏±‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏±‡∏ö‡∏û‡∏±‡∏ô‡πÄ‡∏Å‡∏°
                </div>
                <div style={{ marginBottom: 10 }}>
                  <b>‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:</b>
                  <ul style={{ margin: '8px 0 0 18px', padding: 0 }}>
                    <li>‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö Real-time ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏° P (Player), B (Banker), T (Tie) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•</li>
                    <li>‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
                    <li>‚úÖ ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≤ (‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å/‡∏ú‡∏¥‡∏î)</li>
                    <li>‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏ß‡∏¥‡∏ô‡∏±‡∏¢</li>
                  </ul>
                </div>
                <div style={{ marginBottom: 10 }}>
                  <span role="img" aria-label="search">üîç</span> <b>‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏°</b><br />
                  ‡∏ï‡∏±‡∏ß Indicator ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏î‡∏≤‡∏™‡∏∏‡πà‡∏° ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö momentum analysis ‡∏ú‡∏™‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÄ‡∏ä‡∏¥‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‡πÄ‡∏û‡∏∑‡πà‡∏≠ ‚Äú‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡∏ó‡∏¥‡∏®‚Äù ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏ï‡πà‡∏≠‡∏ï‡∏≤<br />
                  ‡∏ó‡∏∏‡∏Å‡∏ï‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏û‡πà ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏ä‡∏Ñ
                </div>
                <div style={{ marginBottom: 10 }}>
                  <span role="img" aria-label="briefcase">üíº</span> <b>‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏Ñ‡∏£?</b>
                  <ul style={{ margin: '8px 0 0 18px', padding: 0 }}>
                    <li>‡∏ô‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à</li>
                    <li>‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏∏‡∏î‡∏û‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏°‡πÉ‡∏à</li>
                    <li>‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡∏´‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏•‡πà‡∏ô‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö ‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• ‡∏°‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£</li>
                  </ul>
                </div>
                <div style={{ marginBottom: 10 }}>
                  <span role="img" aria-label="chart">üìà</span> <b>‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö ‡πÅ‡∏ï‡πà‡πÉ‡∏´‡πâ ‚Äú‡∏Å‡∏£‡∏≠‡∏ö‡∏Ñ‡∏¥‡∏î‚Äù ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡∏Å‡∏ß‡πà‡∏≤</b><br />
                  ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏û‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏•‡∏† ‡∏ï‡∏±‡∏ß Indicator ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏¥‡∏®‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á "‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°"<br />
                  <b>‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏Å‡∏° ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á</b>
                </div>
                <div style={{ marginTop: 18, color: '#ffeb3b', fontWeight: 600, fontSize: 15 }}>
                  *freecash baccarat indicator ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏ß‡∏á‡∏´‡∏≤‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô*
                </div>
              </div>
            </div>
          </div>
        )}
        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
        <div style={{ marginBottom: 16 }}>
          <label style={{ marginRight: 8 }}>
            ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°:
            <input
              type="number"
              value={budget}
              min={1}
              style={{ width: 80, marginLeft: 4, marginRight: 16 }}
              onChange={e => {
                const val = Number(e.target.value);
                setBudget(val);
                setBalance(val); // ‡∏ï‡∏±‡πâ‡∏á balance ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô budget
              }}
            />
          </label>
          <label style={{ marginRight: 8 }}>
            ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô/‡πÑ‡∏°‡πâ:
            <input
              type="number"
              value={betAmount}
              min={1}
              style={{ width: 80, marginLeft: 4 }}
              onChange={e => setBetAmount(Number(e.target.value))}
            />
          </label>
          <label style={{ marginLeft: 16, marginRight: 8 }}>
            ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:
            <input
              type="number"
              value={balance}
              style={{ width: 100, marginLeft: 4 }}
              onChange={e => setBalance(Number(e.target.value))}
            />
            <span style={{ marginLeft: 8, color: '#ffb700', fontWeight: 600 }}>
              {balance.toLocaleString()}
            </span>
          </label>
          <button
            style={{ marginLeft: 16 }}
            onClick={resetBudget}
          >
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
          </button>
        </div>
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏î‡∏ú‡∏• */}
        <div>
          <button
            style={{
              background: isBetting ? '#ffb700' : '#444',
              color: isBetting ? '#222' : '#fff',
              marginRight: 12,
              padding: '8px 18px',
              borderRadius: 8,
              fontWeight: 600,
              border: 'none',
              fontSize: 16,
              cursor: 'pointer'
            }}
            onClick={() => setIsBetting(v => !v)} // toggle ‡πÅ‡∏ó‡∏ô
          >
            ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ
          </button>
          <button
            style={{ background: 'blue', color: '#fff', marginRight: 8, width: 40, height: 40, fontSize: 18, borderRadius: '50%' }}
            onClick={() => addResult('P')}
          >
            P
          </button>
          <button
            style={{ background: 'red', color: '#fff', marginRight: 8, width: 40, height: 40, fontSize: 18, borderRadius: '50%' }}
            onClick={() => addResult('B')}
          >
            B
          </button>
          <button
            style={{ background: 'green', color: '#fff', width: 40, height: 40, fontSize: 18, borderRadius: '50%' }}
            onClick={() => addResult('T')}
          >
            T
          </button>
          <button
            style={{ marginLeft: 16 }}
            onClick={() => {
              setResults([]);
              setPrediction(null);
              setHistory([]);
              // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á setStats({}) ‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏î‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà"
            }}
          >
            ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏î‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
        {/* Popup ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
        {showResult && (
          <div
            style={{
              position: 'fixed',
              top: '30%',
              left: '50%',
              transform: 'translate(-50%, -50%)',
              background: showResult === 'win' ? '#2ecc40' : '#ff4136',
              color: '#fff',
              padding: '32px 48px',
              borderRadius: 16,
              fontSize: 32,
              fontWeight: 'bold',
              zIndex: 9999,
              boxShadow: '0 4px 32px #0008',
              transition: 'all 0.2s'
            }}
          >
            {showResult === 'win' ? '‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ‡∏£‡∏ß‡∏¢' : '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡πÄ‡∏≠‡∏≤‡πÉ‡∏´‡∏°‡πà'}
          </div>
        )}
        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á Big Road */}
        <div
          style={{
            display: 'inline-block',
            background: '#222',
            padding: 8,
            borderRadius: 8,
            margin: '16px 0',
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            maxWidth: '100%',
            overflowX: 'auto'
          }}
        >
          <div style={{ display: 'grid', gridTemplateColumns: `repeat(${bigRoad[0].length}, 38px)` }}>
            {bigRoad.map((row, rowIdx) =>
              row.map((cell, colIdx) => renderBigRoadCell(cell, rowIdx, colIdx))
            )}
          </div>
          <div style={{ color: '#ffeb3b', fontSize: 13, marginTop: 6, textAlign: 'center' }}>
            *‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå*
          </div>
        </div>
        <div style={{ marginTop: 24, display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 40 }}>
          {renderPredictionCircle(prediction)}
        </div>
        <div style={{ marginTop: 8, fontSize: 18, textAlign: 'center', color: '#ffeb3b', fontWeight: 600 }}>
          {prediction}
        </div>
        <div style={{ marginTop: 16, fontSize: 18 }}>
          <span style={{ color: 'lime' }}>‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å: {correctCount} ‡∏ï‡∏≤</span>
          <span style={{ color: 'tomato', marginLeft: 16 }}>‡∏ó‡∏≤‡∏¢‡∏ú‡∏¥‡∏î: {wrongCount} ‡∏ï‡∏≤</span>
        </div>
      </header>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏û‡∏ß‡∏Å‡πÄ‡∏£‡∏≤ ‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤ */}
      <button
        style={{
          position: 'fixed',
          right: 24,
          bottom: 24,
          background: '#6c47ff',
          color: '#fff',
          border: 'none',
          borderRadius: 24,
          padding: '12px 28px',
          fontSize: 17,
          fontWeight: 'bold',
          boxShadow: '0 2px 12px #0005',
          cursor: 'pointer',
          zIndex: 1000,
          animation: 'popupZoomIn 0.3s'
        }}
        onClick={() => setShowSupport(true)}
      >
        ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏û‡∏ß‡∏Å‡πÄ‡∏£‡∏≤
      </button>
      {/* Popup ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô */}
      {showSupport && (
        <div
          style={{
            position: 'fixed',
            top: 0, left: 0, width: '100vw', height: '100vh',
            background: '#000a',
            zIndex: 99999,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            animation: 'fadeInBg 0.3s'
          }}
          onClick={() => setShowSupport(false)}
        >
          <div
            style={{
              background: '#222',
              color: '#fff',
              padding: '32px 28px',
              borderRadius: 16,
              maxWidth: 380,
              fontSize: 18,
              boxShadow: '0 8px 32px #000a',
              position: 'relative',
              animation: 'popupZoomIn 0.3s'
            }}
            onClick={e => e.stopPropagation()}
          >
            <button
              style={{
                position: 'absolute',
                top: 12,
                right: 16,
                background: 'transparent',
                color: '#fff',
                border: 'none',
                fontSize: 24,
                cursor: 'pointer'
              }}
              onClick={() => setShowSupport(false)}
              aria-label="close"
            >√ó</button>
            <div style={{ textAlign: 'center', lineHeight: 1.8 }}>
              <b>‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏û‡∏ß‡∏Å‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà</b><br />
              <span style={{ color: '#ffeb3b' }}>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå/SCB :</span><br />
              <span style={{ fontSize: 20, fontWeight: 600, letterSpacing: 1 }}>4058454859</span><br />
              <span>Mr. Kaiwen Li</span>
            </div>
          </div>
        </div>
      )}
      {showStats && renderStatsPopup()}
    </div>
  );
}

export default App;

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animation ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå App.css ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ô <style> global
// ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô App.css ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
/*
@keyframes fadeInBg {
  from { opacity: 0; }
  to { opacity: 1; }
}
@keyframes popupZoomIn {
  from { opacity: 0; transform: scale(0.85);}
  to { opacity: 1; transform: scale(1);}
}
*/
